// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiteNewsApi.Models;

namespace SiteNewsApi.Migrations
{
    [DbContext(typeof(NewsContext))]
    [Migration("20190620064211_InitialNewsContext")]
    partial class InitialNewsContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SiteNewsApi.Models.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<DateTime?>("ModDate");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("SiteNewsApi.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool?>("IsActive");

                    b.Property<string>("LastName");

                    b.Property<string>("Login");

                    b.Property<string>("MiddleName");

                    b.Property<DateTime?>("ModDate");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("SiteNewsApi.Models.Entities.UsersNews", b =>
                {
                    b.Property<int>("IdUser");

                    b.Property<int>("IdNews");

                    b.Property<string>("LikedLevel");

                    b.HasKey("IdUser", "IdNews");

                    b.HasIndex("IdNews");

                    b.ToTable("UsersNews");
                });

            modelBuilder.Entity("SiteNewsApi.Models.Entities.UsersNews", b =>
                {
                    b.HasOne("SiteNewsApi.Models.Entities.News", "News")
                        .WithMany("UsersNews")
                        .HasForeignKey("IdNews")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SiteNewsApi.Models.Entities.User", "User")
                        .WithMany("UsersNews")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
